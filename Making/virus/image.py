import tkinter; tk = tkinter
import tkinter.simpledialog;  simpledialog = tkinter.simpledialog
from PIL import Image, ImageTk
import random; rand = random
from time import sleep

# Variables
img_base64 = r""
master = tk.Tk()
Pos = {'X': random.randint(100, 500), 'Y': random.randint(100, 500)}

# Functions
def move(event):
	Pos['X'] = abs(random.randint(-10, 10) * random.randint(-10, 10) - random.randint(-10, 10)**2 + random.randint(-10, 10)) * 10
	Pos['Y'] = abs(random.randint(-10, 10) * random.randint(-10, 10) - random.randint(-10, 10)**2 + random.randint(-10, 10)) * 10
	master.geometry(f"290x205+{Pos['X']}+{Pos['Y']}")

# W: 290, H: 205
master.geometry("290x205+{0}+{1}".format(Pos['X'], Pos['Y']))
master.title(" ")

# 画像表示
IMG = ImageTk.PhotoImage(Image.open(__import__('io').BytesIO(__import__('base64').b64decode(img_base64))))
canvas = tk.Canvas(bg="black")
canvas.create_image(0, 0, image=IMG, anchor=tk.NW, tags='IMG')
canvas.place(x=0, y=0)

master.bind("<Key>", move)
master.bind("q", quit)

master.mainloop()
